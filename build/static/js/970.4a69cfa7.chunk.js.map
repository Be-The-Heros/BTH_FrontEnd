{"version":3,"file":"static/js/970.4a69cfa7.chunk.js","mappings":"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","sources":["helpers/cleanAccents.ts","helpers/validate.ts","pages/CreatePost/style.ts","pages/CreatePost/index.tsx","hooks/post/create/useCreatePost.ts","../node_modules/lodash/toLower.js"],"sourcesContent":["export const cleanAccents = (str: string): string => {\n  str = str.replace(/à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ/g, 'a');\n  str = str.replace(/è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ/g, 'e');\n  str = str.replace(/ì|í|ị|ỉ|ĩ/g, 'i');\n  str = str.replace(/ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ/g, 'o');\n  str = str.replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ/g, 'u');\n  str = str.replace(/ỳ|ý|ỵ|ỷ|ỹ/g, 'y');\n  str = str.replace(/đ/g, 'd');\n  str = str.replace(/À|Á|Ạ|Ả|Ã|Â|Ầ|Ấ|Ậ|Ẩ|Ẫ|Ă|Ằ|Ắ|Ặ|Ẳ|Ẵ/g, 'A');\n  str = str.replace(/È|É|Ẹ|Ẻ|Ẽ|Ê|Ề|Ế|Ệ|Ể|Ễ/g, 'E');\n  str = str.replace(/Ì|Í|Ị|Ỉ|Ĩ/g, 'I');\n  str = str.replace(/Ò|Ó|Ọ|Ỏ|Õ|Ô|Ồ|Ố|Ộ|Ổ|Ỗ|Ơ|Ờ|Ớ|Ợ|Ở|Ỡ/g, 'O');\n  str = str.replace(/Ù|Ú|Ụ|Ủ|Ũ|Ư|Ừ|Ứ|Ự|Ử|Ữ/g, 'U');\n  str = str.replace(/Ỳ|Ý|Ỵ|Ỷ|Ỹ/g, 'Y');\n  str = str.replace(/Đ/g, 'D');\n  // Combining Diacritical Marks\n  str = str.replace(/\\u0300|\\u0301|\\u0303|\\u0309|\\u0323/g, ''); // huyền, sắc, hỏi, ngã, nặng\n  str = str.replace(/\\u02C6|\\u0306|\\u031B/g, ''); // mũ â (ê), mũ ă, mũ ơ (ư)\n\n  return str;\n};\n","export function validURL(str: string) {\n  var pattern = new RegExp(\n    '^(https?:\\\\/\\\\/)?' + // protocol\n      '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\n      '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\n      '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\n      '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\n      '(\\\\#[-a-z\\\\d_]*)?$',\n    'i'\n  ); // fragment locator\n  return pattern.test(str);\n}\n","import styled from 'styled-components';\n\nexport default styled.div`\n  padding: 2% 5em;\n  .header {\n    font-size: 1rem;\n    font-weight: bold;\n    --distance: -2rem;\n    padding-bottom: 0.25rem;\n    .slide-right {\n      padding-bottom: 10px;\n      width: 100%;\n      overflow: hidden;\n      /* margin-left: var(--distance); */\n      animation: 2s slide-right 2s forwards;\n      transform: translateX(-100%);\n      font-size: 1.5rem;\n    }\n\n    @keyframes slide-right {\n      to {\n        transform: translateX(0);\n      }\n    }\n  }\n\n  .content {\n    background-color: var(--white);\n    min-height: 100vh;\n    padding: 2% 3%;\n    border-radius: 0.5rem;\n    .form-input {\n      position: relative;\n      margin: 1em 0;\n\n      label {\n        margin: 0.25rem 0;\n        font-size: 1rem;\n      }\n\n      .waring-error {\n        margin-top: 0.25rem;\n        color: red;\n        display: block;\n      }\n    }\n    .dropzone {\n      flex: 1;\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      padding: 20px;\n      border-width: 2px;\n      border-radius: 2px;\n      border-color: #eeeeee;\n      border-style: dashed;\n      background-color: #fafafa;\n      color: #bdbdbd;\n      outline: none;\n      transition: border 0.24s ease-in-out;\n    }\n    .dropzone:focus {\n      border-color: #2196f3;\n    }\n    .thumb-file {\n      display: flex;\n    }\n\n    .item-image {\n      padding-bottom: 0 !important;\n      padding-top: 0 !important;\n      padding-left: 0;\n    }\n    /* .final-image {\n      filter: blur(0.25px);\n    } */\n    .icon-safe {\n      font-size: 1.25rem;\n      position: absolute;\n      right: 1rem;\n      top: 25%;\n    }\n  }\n  .introduction {\n    padding: 0 2rem;\n  }\n  .ant-image {\n    height: 100%;\n  }\n  .create-url-post {\n    span {\n      &:hover {\n        text-decoration: underline;\n        color: var(--bs-primary);\n      }\n    }\n  }\n`;\n","import { Button, Image, Input, Select } from 'antd';\nimport TextArea from 'antd/lib/input/TextArea';\nimport clsx from 'clsx';\nimport { LIMIT_FILE, SLOGANS } from 'constants/slogan';\nimport {\n  getAllCommunes,\n  getAllDistricts,\n  getAllProvinces,\n  getCommune,\n  getDistrict,\n  getProvince,\n} from 'helpers';\nimport { cleanAccents } from 'helpers/cleanAccents';\nimport { validURL } from 'helpers/validate';\nimport { useCreatePost } from 'hooks/post/create/useCreatePost';\nimport toLower from 'lodash/toLower';\nimport upperFirst from 'lodash/upperFirst';\nimport React from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { Controller, useForm } from 'react-hook-form';\nimport { AiOutlineSafety } from 'react-icons/ai';\nimport { FcFullTrash } from 'react-icons/fc';\nimport { useNavigate } from 'react-router';\nimport { toast } from 'react-toastify';\nimport { useRecoilValue } from 'recoil';\nimport { userState } from 'recoil/users/state';\nimport IntroductionTitle from './components/IntroductionTitle';\nimport { PreviewPost } from './components/PreviewPost';\nimport Style from './style';\nconst { Option } = Select;\nconst TIME_CHANGE_TEXT = 3000;\ninterface FieldCreatePost {\n  title: string;\n  content: string;\n  id_province: string;\n  id_ward: string;\n  id_district: string;\n  residential_address: string;\n  join_url: string;\n}\nconst CreatePostPage = () => {\n  const navigate = useNavigate();\n  // init State\n  const user = useRecoilValue(userState);\n  const {\n    handleSubmit,\n    control,\n    watch,\n    setValue,\n    formState: { errors },\n  } = useForm<FieldCreatePost>();\n  let refInterval = React.useRef<any>();\n\n  const [isOpenPreview, setIsOpenPreview] = React.useState(false);\n  const [isCreateChat, setIsCreateChat] = React.useState(false);\n  const [randomSlogan, setRandomSlogan] = React.useState(\n    Math.floor(Math.random() * SLOGANS.length)\n  );\n  const [files, setFiles] = React.useState<\n    Array<\n      File & {\n        preview: string;\n      }\n    >\n  >([]);\n  const [residence, setResidence] = React.useState({\n    province: '',\n    district: '',\n    ward: '',\n  });\n  const [toggle, setToggle] = React.useState({ title: '', size: 0 });\n\n  // * API Create Post\n  const createPostMutation = useCreatePost();\n\n  //  save in link photo image\n  const { getRootProps, getInputProps } = useDropzone({\n    accept: ['image/*', 'video/*'],\n    onDrop: (acceptedFiles: File[]) => {\n      const newFiles = acceptedFiles.map((file) =>\n        Object.assign(file, {\n          preview: URL.createObjectURL(file),\n        })\n      );\n      if (newFiles.length + files.length > LIMIT_FILE) {\n        toast.warning('You can only upload 10 images');\n        return;\n      }\n      setFiles([...files, ...newFiles]);\n    },\n  });\n\n  //  TODO: Checking api\n  React.useEffect(() => {\n    toast.dismiss();\n    if (createPostMutation.isLoading) {\n      toast.loading('Creating post...');\n      return;\n    }\n    if (createPostMutation.isSuccess) {\n      files.forEach((file) => URL.revokeObjectURL(file.preview));\n      toast.success('Creating post success');\n\n      navigate(`/post/detail/${createPostMutation.data.post_id}`);\n      return;\n    }\n  }, [\n    createPostMutation.isLoading,\n    createPostMutation.isSuccess,\n    createPostMutation.data?.post_id,\n  ]);\n\n  // TODO: change slogan\n  React.useEffect(() => {\n    refInterval.current = setInterval(() => {\n      const randomIndex = Math.floor(Math.random() * SLOGANS.length);\n      setRandomSlogan(randomIndex);\n    }, TIME_CHANGE_TEXT);\n  }, []);\n\n  // TODO: render images\n  const renderThumbsFile = () => {\n    return files.map((file, index) => {\n      const imageClassName = clsx(\n        {\n          ['pl-0']: (index + 1) % 3 === 1,\n          // ['pr-0']: (index + 1) % 3 === 0,\n        },\n        'col-4 item-image'\n      );\n\n      return (\n        <div className={imageClassName} key={index}>\n          <div\n            className='w-100 h-100'\n            style={{\n              marginTop: '0.25rem',\n              position: 'relative',\n            }}\n          >\n            <Image\n              src={file.preview}\n              style={{\n                objectFit: 'cover',\n              }}\n              alt='preview'\n            />\n            <FcFullTrash\n              style={{\n                position: 'absolute',\n                top: '0.25rem',\n                right: '0.25rem',\n                fontSize: '1.25rem',\n                cursor: 'pointer',\n              }}\n              onClick={() => setFiles([...files.filter((f, i) => i !== index)])}\n            />\n          </div>\n        </div>\n      );\n    });\n  };\n  // unmount\n  React.useEffect(() => {\n    //! Make sure to revoke the data uris to avoid memory leaks\n    return () => {\n      files.forEach((file) => URL.revokeObjectURL(file.preview));\n      clearInterval(refInterval.current);\n    };\n  }, []);\n\n  const onSubmit = (data: FieldCreatePost) => {\n    const province = getProvince(data.id_province);\n    const ward = getCommune(data.id_ward);\n    const district = getDistrict(data.id_district);\n    createPostMutation.mutate({\n      ...data,\n      province,\n      district,\n      ward,\n      photos: files,\n      isCreateChat,\n    });\n  };\n\n  // TODO: Render component\n  return (\n    <Style className='create-post-page'>\n      <PreviewPost\n        content={watch('content')}\n        avatar={user.avatar}\n        fullname={user.first_name + ' ' + user.last_name}\n        joined={1000}\n        join_url={watch('join_url')}\n        title={watch('title')}\n        visible={isOpenPreview}\n        ward={getCommune(residence.ward)}\n        district={getDistrict(residence.district)}\n        province={getProvince(residence.province)}\n        onCancel={() => setIsOpenPreview(false)}\n        residential_address={watch('residential_address')}\n        photos={files.map((file) => file.preview)}\n      />\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <div className='header'>\n          <div className='slide-right'>{SLOGANS[randomSlogan]}</div>\n        </div>\n        <div className='d-flex'>\n          <div className='content w-70'>\n            <div className='form-input'>\n              <label>Title</label>\n              <Controller\n                name='title'\n                control={control}\n                rules={{ required: true }}\n                defaultValue=''\n                render={({ field }) => (\n                  <Input\n                    {...field}\n                    placeholder='Enter Title'\n                    onFocus={(e) => {\n                      const height = e.target.scrollHeight;\n                      setToggle({ title: 'title', size: height });\n                    }}\n                  />\n                )}\n              />\n              {errors.title && (\n                <span className='waring-error'>Title is required</span>\n              )}\n            </div>\n            <div className='form-input'>\n              <label className='w-100'>Residence</label>\n              <Controller\n                name='id_province'\n                control={control}\n                rules={{ required: true }}\n                render={({ field }) => (\n                  <Select\n                    defaultValue=''\n                    showSearch\n                    {...field}\n                    className='col-4'\n                    style={{\n                      paddingLeft: '0',\n                    }}\n                    onFocus={() => {\n                      setToggle({ title: 'address', size: toggle.size });\n                    }}\n                    optionFilterProp='children'\n                    filterOption={(input, option: any) => {\n                      return cleanAccents(toLower(option?.children)).includes(\n                        cleanAccents(toLower(input))\n                      );\n                    }}\n                    onChange={(province) => {\n                      setResidence({\n                        ...residence,\n                        province,\n                      });\n\n                      field.onChange(province);\n                      setValue('id_district', '');\n                      setValue('id_ward', '');\n                    }}\n                  >\n                    <Option value={''}>Please Choose Province</Option>\n                    {getAllProvinces().map((province) => (\n                      <Option\n                        value={province.idProvince}\n                        key={province.idProvince}\n                      >\n                        {province.name}\n                      </Option>\n                    ))}\n                  </Select>\n                )}\n              />\n              <Controller\n                name='id_district'\n                control={control}\n                rules={{ required: true }}\n                render={({ field }) => (\n                  <React.Fragment>\n                    <Select\n                      defaultValue=''\n                      className='col-4'\n                      style={{\n                        paddingRight: '0',\n                      }}\n                      {...field}\n                      onFocus={() => {\n                        setToggle({ title: 'address', size: toggle.size });\n                      }}\n                      showSearch\n                      filterOption={(input, option: any) => {\n                        return cleanAccents(toLower(option?.children)).includes(\n                          cleanAccents(toLower(input))\n                        );\n                      }}\n                      onChange={(district) => {\n                        setResidence({ ...residence, district });\n                        field.onChange(district);\n                      }}\n                    >\n                      <Option value={''}>Please Choose District</Option>\n\n                      {getAllDistricts(residence.province).map((district) => (\n                        <Option\n                          value={district.idDistrict}\n                          key={district.idDistrict}\n                        >\n                          {district.name}\n                        </Option>\n                      ))}\n                    </Select>\n                  </React.Fragment>\n                )}\n              />\n              <Controller\n                name='id_ward'\n                control={control}\n                rules={{ required: true }}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    className='col-4'\n                    defaultValue={''}\n                    style={{\n                      paddingRight: '0',\n                    }}\n                    onFocus={() => {\n                      setToggle({ title: 'address', size: toggle.size });\n                    }}\n                    showSearch\n                    filterOption={(input, option: any) => {\n                      return cleanAccents(toLower(option?.children)).includes(\n                        cleanAccents(toLower(input))\n                      );\n                    }}\n                    onChange={(ward) => {\n                      setResidence({ ...residence, ward });\n                      field.onChange(ward);\n                    }}\n                  >\n                    <Option value={''}>Please Choose Ward</Option>\n\n                    {getAllCommunes(residence.district).map((ward) => (\n                      <Option value={ward.idCommune} key={ward.idCommune}>\n                        {ward.name}\n                      </Option>\n                    ))}\n                  </Select>\n                )}\n              />\n              {errors.id_province && (\n                <span className='waring-error'>Province is required</span>\n              )}\n              {!errors.id_province && errors.id_district && (\n                <span className='waring-error'>District is required</span>\n              )}\n              {!errors.id_province && !errors.id_district && errors.id_ward && (\n                <span className='waring-error'>Ward is required</span>\n              )}\n            </div>\n            <div className='form-input'>\n              <label>Resident address</label>\n              <Controller\n                name='residential_address'\n                control={control}\n                rules={{ required: true }}\n                render={({ field }) => (\n                  <Input\n                    {...field}\n                    onFocus={() => {\n                      setToggle({\n                        title: 'resident_address',\n                        size: toggle.size,\n                      });\n                    }}\n                    placeholder='Enter resident address'\n                    onBlur={(e) => {\n                      field.onChange(\n                        e.target.value\n                          .split(' ')\n                          .map((word) => upperFirst(word))\n                          .join(' ')\n                      );\n                    }}\n                  />\n                )}\n              />\n              {errors.residential_address && (\n                <span className='waring-error'>Resident address invalid</span>\n              )}\n            </div>\n            <div className='form-input'>\n              <label> Content</label>\n              <Controller\n                name='content'\n                rules={{ required: true }}\n                control={control}\n                render={({ field }) => (\n                  <TextArea\n                    {...field}\n                    onFocus={() => {\n                      setToggle({ ...toggle, title: 'content' });\n                    }}\n                    placeholder='Explain your post'\n                    style={{\n                      height: '200px',\n                    }}\n                    autoSize\n                    onChange={(e) => {\n                      const height = e.target.scrollHeight;\n                      setToggle({ title: 'content', size: height });\n                      field.onChange(e.target.value);\n                    }}\n                  />\n                )}\n              />\n              {errors.content && (\n                <span className='waring-error'>Content required</span>\n              )}\n            </div>\n\n            <div className='form-input'>\n              <label>URL chat room</label>\n              {!isCreateChat && (\n                <Controller\n                  name='join_url'\n                  rules={{\n                    required: false,\n                    validate: (value) => {\n                      return (\n                        !value || validURL(value || '') || value?.trim() === ''\n                      );\n                    },\n                  }}\n                  control={control}\n                  render={({ field }) => (\n                    <div className='w-50 position-relative'>\n                      <Input\n                        {...field}\n                        onFocus={() => {\n                          setToggle({ ...toggle, title: 'chat' });\n                        }}\n                        style={{\n                          paddingRight: '3rem',\n                        }}\n                        placeholder='Example: https://t.me/+de5i4MvIBAMzYmY1'\n                      />\n                      <AiOutlineSafety\n                        className='icon-safe'\n                        color={\n                          validURL(watch('join_url'))\n                            ? 'var(--bs-success)'\n                            : 'var(--bs-danger)'\n                        }\n                      />\n                    </div>\n                  )}\n                />\n              )}\n              {isCreateChat && (\n                <div>\n                  <strong>\n                    {' '}\n                    we will create a chat room, once you create the post\n                    successfully. Join the chat room by clicking the join button\n                  </strong>\n                </div>\n              )}\n\n              <div\n                className='create-url-post'\n                onClick={() => setIsCreateChat(!isCreateChat)}\n              >\n                {!isCreateChat ? (\n                  <span\n                    style={{\n                      cursor: 'pointer',\n                      marginTop: '0.5rem',\n                    }}\n                  >\n                    Create chat room from site\n                  </span>\n                ) : (\n                  <span\n                    style={{\n                      cursor: 'pointer',\n                      marginTop: '0.5rem',\n                      color: 'var(--bs-cyan)',\n                    }}\n                  >\n                    I have a chat room ?\n                  </span>\n                )}\n              </div>\n\n              {errors.join_url && (\n                <span className='waring-error'>Url is not valid</span>\n              )}\n            </div>\n\n            <div\n              className='form-input'\n              onFocus={() => {\n                setToggle({ title: 'photo', size: toggle.size });\n              }}\n            >\n              <label>Upload Image</label>\n              <input {...getInputProps()} />\n              <div {...getRootProps({ className: 'dropzone' })}>\n                <input {...getInputProps()} />\n                <p>Drag 'n' drop some files here, or click to select files</p>\n              </div>\n              <aside>\n                <div\n                  className='d-flex w-100 flex-wrap preview'\n                  style={{ margin: '1rem 0' }}\n                >\n                  <Image.PreviewGroup>{renderThumbsFile()}</Image.PreviewGroup>\n                </div>\n              </aside>\n            </div>\n            <div\n              className='form-input d-flex justify-content-around'\n              style={{\n                marginTop: '1rem',\n              }}\n            >\n              <Button\n                type='primary'\n                htmlType='submit'\n                disabled={createPostMutation.isLoading}\n              >\n                Publish\n              </Button>\n              <Button type='default' onClick={() => setIsOpenPreview(true)}>\n                Preview\n              </Button>\n            </div>\n          </div>\n          <div className='w-30 introduction'>\n            <IntroductionTitle {...toggle} />\n          </div>\n        </div>\n      </form>\n    </Style>\n  );\n};\n\nexport default CreatePostPage;\n","import apis from 'apis';\nimport toString from 'lodash/toString';\nimport { useMutation } from 'react-query';\nimport { API_POST } from '../config';\n\nexport const useCreatePost = () => {\n  return useMutation(async (body: RequestPost) => {\n    const formData = new FormData();\n    const { photos } = body;\n    photos?.forEach((photo) => {\n      formData.append('files', photo);\n    });\n    Object.keys(body).forEach((key: string) => {\n      const value = body[key as keyof RequestPost];\n      if (value && typeof value !== 'object') {\n        formData.append(key, toString(value));\n      }\n    });\n\n    return apis.post<PostInfo>(API_POST, '/create', {\n      body: formData,\n    });\n  });\n};\n","var toString = require('./toString');\n\n/**\n * Converts `string`, as a whole, to lower case just like\n * [String#toLowerCase](https://mdn.io/toLowerCase).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the lower cased string.\n * @example\n *\n * _.toLower('--Foo-Bar--');\n * // => '--foo-bar--'\n *\n * _.toLower('fooBar');\n * // => 'foobar'\n *\n * _.toLower('__FOO_BAR__');\n * // => '__foo_bar__'\n */\nfunction toLower(value) {\n  return toString(value).toLowerCase();\n}\n\nmodule.exports = toLower;\n"],"names":["cleanAccents","str","replace","validURL","RegExp","test","styled","Option","Select","navigate","useNavigate","user","useRecoilValue","userState","useForm","handleSubmit","control","watch","setValue","errors","formState","refInterval","React","isOpenPreview","setIsOpenPreview","isCreateChat","setIsCreateChat","Math","floor","random","SLOGANS","randomSlogan","setRandomSlogan","files","setFiles","province","district","ward","residence","setResidence","title","size","toggle","setToggle","createPostMutation","useMutation","body","formData","FormData","photos","forEach","photo","append","Object","keys","key","value","toString","apis","API_POST","useDropzone","accept","onDrop","acceptedFiles","newFiles","map","file","assign","preview","URL","createObjectURL","length","LIMIT_FILE","toast","getRootProps","getInputProps","isLoading","isSuccess","revokeObjectURL","data","post_id","current","setInterval","randomIndex","clearInterval","className","PreviewPost","content","avatar","fullname","first_name","last_name","joined","join_url","visible","getCommune","getDistrict","getProvince","onCancel","residential_address","onSubmit","id_province","id_ward","id_district","mutate","name","rules","required","defaultValue","render","field","placeholder","onFocus","e","height","target","scrollHeight","showSearch","style","paddingLeft","optionFilterProp","filterOption","input","option","toLower","children","includes","onChange","getAllProvinces","idProvince","paddingRight","getAllDistricts","idDistrict","getAllCommunes","idCommune","onBlur","split","word","upperFirst","join","TextArea","autoSize","validate","trim","color","onClick","cursor","marginTop","margin","index","imageClassName","clsx","position","src","objectFit","alt","top","right","fontSize","filter","f","i","type","htmlType","disabled","IntroductionTitle","require","module","exports","toLowerCase"],"sourceRoot":""}